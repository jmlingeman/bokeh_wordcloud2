{"version":3,"artifacts":[{"module":{"file":"/Users/jesse/git-repos/augusto/bokeh_wordcloud2/bokeh_wordcloud2/dist/lib/index.js","base":"/Users/jesse/git-repos/augusto/bokeh_wordcloud2/bokeh_wordcloud2/dist/lib","base_path":"index.js","canonical":"index","resolution":"ESM","id":"6a4b8efd20","hash":"6a4b8efd20b212cac3bed04ef85f002279a0d67b4238e336688d2ffaac19b4e5","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst WordCloud2 = tslib_1.__importStar(require(\"./typescript/\"));\nexports.WordCloud2 = WordCloud2;\nconst base_1 = require(\"@bokeh/bokehjs/base\");\nbase_1.register_models(WordCloud2);\n//# sourceMappingURL=index.js.map\n","type":"js","dependency_paths":[["./typescript/","/Users/jesse/git-repos/augusto/bokeh_wordcloud2/bokeh_wordcloud2/dist/lib/typescript/index.js"]],"dependency_map":[],"externals":[],"shims":[]},"code":{"source":"/* index.js */ function _(require, module, exports) {\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const tslib_1 = require(\"tslib\");\n    const WordCloud2 = tslib_1.__importStar(require(\"8dc204e7cb\") /* ./typescript/ */);\n    exports.WordCloud2 = WordCloud2;\n    const base_1 = require(\"@bokeh/bokehjs/base\");\n    base_1.register_models(WordCloud2);\n}\n","min_source":"function _(e,o,t){Object.defineProperty(t,\"__esModule\",{value:!0});const r=e(\"tslib\").__importStar(e(\"8dc204e7cb\"));t.WordCloud2=r;e(\"@bokeh/bokehjs/base\").register_models(r)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"WordCloud2\",\"__importStar\",\"register_models\"],\"mappings\":\"AAAe,SAASA,EAAEC,EAASC,EAAQC,GACvCC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,MACMC,EADUN,EAAQ,SACGO,aAAaP,EAAQ,eAChDE,EAAQI,WAAaA,EACNN,EAAQ,uBAChBQ,gBAAgBF\",\"file\":\"index.min.js\"}"}},{"module":{"file":"/Users/jesse/git-repos/augusto/bokeh_wordcloud2/bokeh_wordcloud2/dist/lib/typescript/index.js","base":"/Users/jesse/git-repos/augusto/bokeh_wordcloud2/bokeh_wordcloud2/dist/lib","base_path":"typescript/index.js","canonical":"typescript/index","resolution":"ESM","id":"8dc204e7cb","hash":"8dc204e7cbd18bcbc2351e8f13dee352cfb7ceba3eebf25e0499913f3ac4fd94","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extension_bokeh_wordcloud2_1 = require(\"./extension_bokeh_wordcloud2\");\nexports.WordCloud2 = extension_bokeh_wordcloud2_1.WordCloud2;\n//# sourceMappingURL=index.js.map\n","type":"js","dependency_paths":[["./extension_bokeh_wordcloud2","/Users/jesse/git-repos/augusto/bokeh_wordcloud2/bokeh_wordcloud2/dist/lib/typescript/extension_bokeh_wordcloud2.js"]],"dependency_map":[],"externals":[],"shims":[]},"code":{"source":"/* typescript/index.js */ function _(require, module, exports) {\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var extension_bokeh_wordcloud2_1 = require(\"c478435e22\") /* ./extension_bokeh_wordcloud2 */;\n    exports.WordCloud2 = extension_bokeh_wordcloud2_1.WordCloud2;\n}\n","min_source":"function _(e,o,d){Object.defineProperty(d,\"__esModule\",{value:!0});var r=e(\"c478435e22\");d.WordCloud2=r.WordCloud2}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"extension_bokeh_wordcloud2_1\",\"WordCloud2\"],\"mappings\":\"AAA0B,SAASA,EAAEC,EAASC,EAAQC,GAClDC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIC,EAA+BN,EAAQ,cAC3CE,EAAQK,WAAaD,EAA6BC\",\"file\":\"index.min.js\"}"}},{"module":{"file":"/Users/jesse/git-repos/augusto/bokeh_wordcloud2/bokeh_wordcloud2/dist/lib/typescript/extension_bokeh_wordcloud2.js","base":"/Users/jesse/git-repos/augusto/bokeh_wordcloud2/bokeh_wordcloud2/dist/lib","base_path":"typescript/extension_bokeh_wordcloud2.js","canonical":"typescript/extension_bokeh_wordcloud2","resolution":"ESM","id":"c478435e22","hash":"c478435e227ba35dd207732b29bd5c7f0006d7503f8b79d5b705811a40849005","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n        r = Reflect.decorate(decorators, target, key, desc);\n    else\n        for (var i = decorators.length - 1; i >= 0; i--)\n            if (d = decorators[i])\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n// import {DataProvider} from \"models/widgets/tables/data_table\";\nconst widget_1 = require(\"@bokeh/bokehjs/models/widgets/widget\");\nconst p = tslib_1.__importStar(require(\"@bokeh/bokehjs/core/properties\"));\nconst cds_view_1 = require(\"@bokeh/bokehjs/models/sources/cds_view\");\nconst widgets_1 = require(\"@bokeh/bokehjs/models/widgets\");\nconst column_data_source_1 = require(\"@bokeh/bokehjs/models/sources/column_data_source\");\nconst object_1 = require(\"@bokeh/bokehjs/core/util/object\");\nconst array_1 = require(\"@bokeh/bokehjs/core/util/array\");\nconst bokeh_events_1 = require(\"@bokeh/bokehjs/core/bokeh_events\");\nexports.DTINDEX_NAME = \"__bkdt_internal_index__\";\nfunction event(event_name) {\n    return function (cls) {\n        cls.prototype.event_name = event_name;\n    };\n}\n// @setExperimentalDecorators\nlet WordClickEvent = class WordClickEvent extends bokeh_events_1.BokehEvent {\n    constructor(word, weight) {\n        super();\n        this.word = word;\n        this.weight = weight;\n    }\n    _to_json() {\n        const { word, weight } = this;\n        return { weight, word };\n    }\n};\nexports.WordClickEvent = WordClickEvent;\nWordClickEvent.__name__ = \"WordClickEvent\";\nexports.WordClickEvent = WordClickEvent = __decorate([\n    event(\"word_click_event\")\n], WordClickEvent);\n// export type myCB<T> = CallbackLike<T, [string,number,number,number,number], Ret>\nclass DataProvider {\n    constructor(source, view) {\n        this.source = source;\n        this.view = view;\n        if (exports.DTINDEX_NAME in this.source.data)\n            throw new Error(`special name ${exports.DTINDEX_NAME} cannot be used as a data table column`);\n        // Convert the bitset into indicies\n        var idx = [];\n        for (const i of this.view.indices) {\n            idx.push(i);\n        }\n        this.index = idx;\n    }\n    getLength() {\n        return this.index.length;\n    }\n    getItem(offset) {\n        const item = {};\n        for (const field of object_1.keys(this.source.data)) {\n            item[field] = this.source.data[field][this.index[offset]];\n        }\n        item[exports.DTINDEX_NAME] = this.index[offset];\n        return item;\n    }\n    getRecords() {\n        return array_1.range(0, this.getLength()).map((i) => this.getItem(i));\n    }\n}\nDataProvider.__name__ = \"DataProvider\";\nfunction Counter(objects) {\n    const d = {};\n    for (let itm of objects) {\n        d[itm] = d[itm] ? d[itm] + 1 : 1;\n    }\n    return d;\n}\nfunction sortedCounter(objects) {\n    const d = Counter(objects);\n    const arr = Object.keys(d).map((k) => [k, d[k]]);\n    return arr.sort((a, b) => b[1] - a[1]);\n}\nfunction choose(choices) {\n    var index = Math.floor(Math.random() * choices.length);\n    return choices[index];\n}\nfunction choose_str(original_list) {\n    return choose(original_list);\n}\nclass WordCloud2View extends widget_1.WidgetView {\n    DEFAULT_WEIGHT_FACTOR(size) {\n        return Math.pow(size, 2.3) * this.model.height / 1024;\n    }\n    initialize() {\n        this.DEFAULT_WEIGHT_FACTOR = this.DEFAULT_WEIGHT_FACTOR.bind(this);\n        super.initialize();\n        this.prepare();\n    }\n    prepare() {\n        if (this.model.fontWeight && typeof this.model.fontWeight['execute'] === \"function\") {\n            const cb_func = this.model.weightFactor;\n            this.model.fontWeight = (word, weight, font_size) => {\n                const data = { word: word, weight: weight, font_size: font_size };\n                return cb_func.execute(this.model, data);\n            };\n        }\n        if (this.model.weightFactor && typeof this.model.weightFactor['execute'] === \"function\") {\n            const cb_func = this.model.weightFactor;\n            this.model.weightFactor = (size) => {\n                const data = { size: size };\n                return cb_func ? cb_func.execute(this.model, data) : this.DEFAULT_WEIGHT_FACTOR;\n            };\n        }\n        if (this.model.classes && typeof this.model.classes['execute'] === \"function\") {\n            const cb_func = this.model.classes;\n            this.model.classes = (word, weight, font_size) => {\n                const data = { word: word, weight: weight, font_size: font_size };\n                return cb_func.execute(this.model, data);\n            };\n        }\n        if (this.model.color && typeof this.model.color['execute'] === \"function\") {\n            // its a callback\n            const cb_func = this.model.color;\n            this.model.color = (word, weight, font_size, distance, theta) => {\n                const data = { word: word, weight: weight, font_size: font_size, distance: distance, theta: theta };\n                return cb_func.execute(this.model, data);\n            };\n        }\n        else if (typeof this.model.color === \"object\" && typeof this.model.color['slice'] === \"function\") {\n            // its a list??\n            const original_list = this.model.color;\n            this.model.color = () => choose_str(original_list);\n        }\n        else if (typeof this.model.color === \"string\") {\n            const col = this.model.source.get_column(this.model.color);\n            if (col && col.length > 0) {\n                const data = {};\n                const colors = this.model.source.get_column(this.model.color);\n                const keys = this.model.source.get_column(this.model.wordCol);\n                if (keys && keys.length && colors && colors.length) {\n                    for (let i = 0; i < keys.length; i++) {\n                        if (keys[i] && colors[i]) {\n                            data[keys[i]] = colors[i];\n                        }\n                    }\n                }\n                this.model.color = (word) => data[word];\n            }\n        }\n    }\n    // private grid: SlickGrid\n    // update_data() {\n    //     this.model.view.compute_indices()\n    //     this.data.constructor(this.model.source, this.model.view)\n    //     this.render()\n    // }\n    connect_signals() {\n        super.connect_signals();\n        // this.connect(this.model.change, () => this.render())\n        //\n        // this.connect(this.model.source.streaming, () => this.updateGrid())\n        // this.connect(this.model.source.patching, () => this.updateGrid())\n        this.connect(this.model.source.change, () => {\n            this.prepare();\n            this.render();\n        });\n        // this.connect(this.model.source.properties.data.change, () => this.updateGrid())\n        //\n        // this.connect(this.model.source.selected.change, () => this.updateSelection())\n        // this.connect(this.model.source.selected.properties.indices.change, () => this.updateSelection())\n    }\n    css_classes() {\n        return super.css_classes().concat(\"bk-data-table\");\n    }\n    get_sizes1() {\n        if (!this.model.sizeCol) {\n            let words = [];\n            this.data.getRecords().map(record => {\n                const results = record[this.model.wordCol].toUpperCase().match(/([A-Z]+)/);\n                words.push(...results);\n            });\n            return sortedCounter(words).slice(0, 50);\n            // console.log(sortedCounter(this.model.source.get_column(this.model.wordCol) as unknown as string[]));\n        }\n        const s = [];\n        this.data.getRecords().map((item) => {\n            s.push([item[this.model.wordCol], item[this.model.sizeCol]]);\n        });\n        return s;\n    }\n    render() {\n        super.render();\n        this.data = new DataProvider(this.model.source, this.model.view);\n        let sizes = this.get_sizes1();\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = this.model.width;\n        canvas.height = this.model.height;\n        // const colors: string[] = this.model.colors ? this.model.colors : [this.model.color,];\n        const default_grid_size = Math.round(16 * this.model.width / 1024);\n        const opts = {\n            list: sizes,\n            fontFamily: this.model.fontFamily ? this.model.fontFamily : 'Times, serif',\n            gridSize: this.model.gridSize ? this.model.gridSize : default_grid_size,\n            weightFactor: this.model.weightFactor ? this.model.weightFactor : this.DEFAULT_WEIGHT_FACTOR,\n            color: this.model.color,\n            rotateRatio: this.model.rotateRatio,\n            minRotation: this.model.minRotation,\n            maxRotation: this.model.maxRotation,\n            rotationSteps: this.model.rotationSteps,\n            shuffle: false,\n            backgroundColor: this.model.background,\n            drawOutOfBound: false,\n            classes: this.model.classes,\n            fontWeight: this.model.fontWeight,\n            shape: this.model.shape,\n            click: (target, dimensions, event) => {\n                let source = undefined;\n                if (this.model.sizeCol) {\n                    const len_recs = this.data.getLength();\n                    for (let i = 0; i < len_recs; i++) {\n                        const itm = this.data.getItem(i);\n                        if (itm[this.model.wordCol] === target[0] && itm[this.model.sizeCol] === target[1]) {\n                            source = this.data.source;\n                            source.selected.indices = [i];\n                            break;\n                        }\n                    }\n                }\n                if (source === undefined) {\n                    source = new column_data_source_1.ColumnDataSource({\n                        data: {\n                            word: [target[0],],\n                            weight: [target[1],]\n                        }\n                    });\n                    source.selected.indices = [0]; // update our \"selected\" indices ...\n                }\n                const data = { word: target[0], weight: target[1], extra: target[2],\n                    dimensions: dimensions, event: event, source: source };\n                // trigger event to python\n                // this.model.trigger_event(new WordClickEvent(data.word,data.weight))\n                // trigger user js click handler\n                if (this.model.click)\n                    this.model.click.execute(this.model, data);\n            },\n            hover: (!this.model.hover) ? null : (...args) => {\n                if (this.model.hover) {\n                    if (!args || !args[0])\n                        return;\n                    const data = { word: args[0][0], weight: args[0][1], dimensions: args[1], event: args[2] };\n                    this.model.hover.execute(this.model, data);\n                }\n            },\n        };\n        this.el.appendChild(canvas);\n        WordCloud(canvas, opts);\n    }\n}\nexports.WordCloud2View = WordCloud2View;\nWordCloud2View.__name__ = \"WordCloud2View\";\nclass WordCloud2 extends widgets_1.Widget {\n    constructor(attrs) {\n        super(attrs);\n    }\n    static initClass() {\n        this.prototype.type = 'WordCloud2';\n        this.prototype.default_view = WordCloud2View;\n        this.define({\n            // every property here should be defined in the namespace above\n            // and in the pyfile with exactly the same name\n            source: [p.Instance],\n            view: [p.Instance, () => new cds_view_1.CDSView()],\n            wordCol: [p.String],\n            sizeCol: [p.String],\n            color: [p.Any, \"blue\"],\n            fontWeight: [p.Any, \"normal\"],\n            classes: [p.Any, null],\n            hover: [p.Instance, null],\n            click: [p.Instance, null],\n            rotateRatio: [p.Number, 1],\n            minRotation: [p.Number, 0],\n            maxRotation: [p.Number, Math.PI / 2],\n            rotationSteps: [p.Number, 32],\n            gridSize: [p.Number, 16],\n            fontFamily: [p.String, \"Times, Serif\"],\n            shape: [p.String, \"square\"],\n            weightFactor: [p.Any, null],\n        });\n        this.override({\n            width: 600,\n            height: 400,\n            background: \"#FFFFFF\",\n        });\n    }\n}\nexports.WordCloud2 = WordCloud2;\nWordCloud2.__name__ = \"WordCloud2\";\nWordCloud2.initClass();\n//# sourceMappingURL=extension_bokeh_wordcloud2.js.map\n","type":"js","dependency_paths":[],"dependency_map":[],"externals":[],"shims":[]},"code":{"source":"/* typescript/extension_bokeh_wordcloud2.js */ function _(require, module, exports) {\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const tslib_1 = require(\"tslib\");\n    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    };\n    // import {DataProvider} from \"models/widgets/tables/data_table\";\n    const widget_1 = require(\"@bokeh/bokehjs/models/widgets/widget\");\n    const p = tslib_1.__importStar(require(\"@bokeh/bokehjs/core/properties\"));\n    const cds_view_1 = require(\"@bokeh/bokehjs/models/sources/cds_view\");\n    const widgets_1 = require(\"@bokeh/bokehjs/models/widgets\");\n    const column_data_source_1 = require(\"@bokeh/bokehjs/models/sources/column_data_source\");\n    const object_1 = require(\"@bokeh/bokehjs/core/util/object\");\n    const array_1 = require(\"@bokeh/bokehjs/core/util/array\");\n    const bokeh_events_1 = require(\"@bokeh/bokehjs/core/bokeh_events\");\n    exports.DTINDEX_NAME = \"__bkdt_internal_index__\";\n    function event(event_name) {\n        return function (cls) {\n            cls.prototype.event_name = event_name;\n        };\n    }\n    // @setExperimentalDecorators\n    let WordClickEvent = class WordClickEvent extends bokeh_events_1.BokehEvent {\n        constructor(word, weight) {\n            super();\n            this.word = word;\n            this.weight = weight;\n        }\n        _to_json() {\n            const { word, weight } = this;\n            return { weight, word };\n        }\n    };\n    exports.WordClickEvent = WordClickEvent;\n    WordClickEvent.__name__ = \"WordClickEvent\";\n    exports.WordClickEvent = WordClickEvent = __decorate([\n        event(\"word_click_event\")\n    ], WordClickEvent);\n    // export type myCB<T> = CallbackLike<T, [string,number,number,number,number], Ret>\n    class DataProvider {\n        constructor(source, view) {\n            this.source = source;\n            this.view = view;\n            if (exports.DTINDEX_NAME in this.source.data)\n                throw new Error(`special name ${exports.DTINDEX_NAME} cannot be used as a data table column`);\n            // Convert the bitset into indicies\n            var idx = [];\n            for (const i of this.view.indices) {\n                idx.push(i);\n            }\n            this.index = idx;\n        }\n        getLength() {\n            return this.index.length;\n        }\n        getItem(offset) {\n            const item = {};\n            for (const field of object_1.keys(this.source.data)) {\n                item[field] = this.source.data[field][this.index[offset]];\n            }\n            item[exports.DTINDEX_NAME] = this.index[offset];\n            return item;\n        }\n        getRecords() {\n            return array_1.range(0, this.getLength()).map((i) => this.getItem(i));\n        }\n    }\n    DataProvider.__name__ = \"DataProvider\";\n    function Counter(objects) {\n        const d = {};\n        for (let itm of objects) {\n            d[itm] = d[itm] ? d[itm] + 1 : 1;\n        }\n        return d;\n    }\n    function sortedCounter(objects) {\n        const d = Counter(objects);\n        const arr = Object.keys(d).map((k) => [k, d[k]]);\n        return arr.sort((a, b) => b[1] - a[1]);\n    }\n    function choose(choices) {\n        var index = Math.floor(Math.random() * choices.length);\n        return choices[index];\n    }\n    function choose_str(original_list) {\n        return choose(original_list);\n    }\n    class WordCloud2View extends widget_1.WidgetView {\n        DEFAULT_WEIGHT_FACTOR(size) {\n            return Math.pow(size, 2.3) * this.model.height / 1024;\n        }\n        initialize() {\n            this.DEFAULT_WEIGHT_FACTOR = this.DEFAULT_WEIGHT_FACTOR.bind(this);\n            super.initialize();\n            this.prepare();\n        }\n        prepare() {\n            if (this.model.fontWeight && typeof this.model.fontWeight['execute'] === \"function\") {\n                const cb_func = this.model.weightFactor;\n                this.model.fontWeight = (word, weight, font_size) => {\n                    const data = { word: word, weight: weight, font_size: font_size };\n                    return cb_func.execute(this.model, data);\n                };\n            }\n            if (this.model.weightFactor && typeof this.model.weightFactor['execute'] === \"function\") {\n                const cb_func = this.model.weightFactor;\n                this.model.weightFactor = (size) => {\n                    const data = { size: size };\n                    return cb_func ? cb_func.execute(this.model, data) : this.DEFAULT_WEIGHT_FACTOR;\n                };\n            }\n            if (this.model.classes && typeof this.model.classes['execute'] === \"function\") {\n                const cb_func = this.model.classes;\n                this.model.classes = (word, weight, font_size) => {\n                    const data = { word: word, weight: weight, font_size: font_size };\n                    return cb_func.execute(this.model, data);\n                };\n            }\n            if (this.model.color && typeof this.model.color['execute'] === \"function\") {\n                // its a callback\n                const cb_func = this.model.color;\n                this.model.color = (word, weight, font_size, distance, theta) => {\n                    const data = { word: word, weight: weight, font_size: font_size, distance: distance, theta: theta };\n                    return cb_func.execute(this.model, data);\n                };\n            }\n            else if (typeof this.model.color === \"object\" && typeof this.model.color['slice'] === \"function\") {\n                // its a list??\n                const original_list = this.model.color;\n                this.model.color = () => choose_str(original_list);\n            }\n            else if (typeof this.model.color === \"string\") {\n                const col = this.model.source.get_column(this.model.color);\n                if (col && col.length > 0) {\n                    const data = {};\n                    const colors = this.model.source.get_column(this.model.color);\n                    const keys = this.model.source.get_column(this.model.wordCol);\n                    if (keys && keys.length && colors && colors.length) {\n                        for (let i = 0; i < keys.length; i++) {\n                            if (keys[i] && colors[i]) {\n                                data[keys[i]] = colors[i];\n                            }\n                        }\n                    }\n                    this.model.color = (word) => data[word];\n                }\n            }\n        }\n        // private grid: SlickGrid\n        // update_data() {\n        //     this.model.view.compute_indices()\n        //     this.data.constructor(this.model.source, this.model.view)\n        //     this.render()\n        // }\n        connect_signals() {\n            super.connect_signals();\n            // this.connect(this.model.change, () => this.render())\n            //\n            // this.connect(this.model.source.streaming, () => this.updateGrid())\n            // this.connect(this.model.source.patching, () => this.updateGrid())\n            this.connect(this.model.source.change, () => {\n                this.prepare();\n                this.render();\n            });\n            // this.connect(this.model.source.properties.data.change, () => this.updateGrid())\n            //\n            // this.connect(this.model.source.selected.change, () => this.updateSelection())\n            // this.connect(this.model.source.selected.properties.indices.change, () => this.updateSelection())\n        }\n        css_classes() {\n            return super.css_classes().concat(\"bk-data-table\");\n        }\n        get_sizes1() {\n            if (!this.model.sizeCol) {\n                let words = [];\n                this.data.getRecords().map(record => {\n                    const results = record[this.model.wordCol].toUpperCase().match(/([A-Z]+)/);\n                    words.push(...results);\n                });\n                return sortedCounter(words).slice(0, 50);\n                // console.log(sortedCounter(this.model.source.get_column(this.model.wordCol) as unknown as string[]));\n            }\n            const s = [];\n            this.data.getRecords().map((item) => {\n                s.push([item[this.model.wordCol], item[this.model.sizeCol]]);\n            });\n            return s;\n        }\n        render() {\n            super.render();\n            this.data = new DataProvider(this.model.source, this.model.view);\n            let sizes = this.get_sizes1();\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = this.model.width;\n            canvas.height = this.model.height;\n            // const colors: string[] = this.model.colors ? this.model.colors : [this.model.color,];\n            const default_grid_size = Math.round(16 * this.model.width / 1024);\n            const opts = {\n                list: sizes,\n                fontFamily: this.model.fontFamily ? this.model.fontFamily : 'Times, serif',\n                gridSize: this.model.gridSize ? this.model.gridSize : default_grid_size,\n                weightFactor: this.model.weightFactor ? this.model.weightFactor : this.DEFAULT_WEIGHT_FACTOR,\n                color: this.model.color,\n                rotateRatio: this.model.rotateRatio,\n                minRotation: this.model.minRotation,\n                maxRotation: this.model.maxRotation,\n                rotationSteps: this.model.rotationSteps,\n                shuffle: false,\n                backgroundColor: this.model.background,\n                drawOutOfBound: false,\n                classes: this.model.classes,\n                fontWeight: this.model.fontWeight,\n                shape: this.model.shape,\n                click: (target, dimensions, event) => {\n                    let source = undefined;\n                    if (this.model.sizeCol) {\n                        const len_recs = this.data.getLength();\n                        for (let i = 0; i < len_recs; i++) {\n                            const itm = this.data.getItem(i);\n                            if (itm[this.model.wordCol] === target[0] && itm[this.model.sizeCol] === target[1]) {\n                                source = this.data.source;\n                                source.selected.indices = [i];\n                                break;\n                            }\n                        }\n                    }\n                    if (source === undefined) {\n                        source = new column_data_source_1.ColumnDataSource({\n                            data: {\n                                word: [target[0],],\n                                weight: [target[1],]\n                            }\n                        });\n                        source.selected.indices = [0]; // update our \"selected\" indices ...\n                    }\n                    const data = { word: target[0], weight: target[1], extra: target[2],\n                        dimensions: dimensions, event: event, source: source };\n                    // trigger event to python\n                    // this.model.trigger_event(new WordClickEvent(data.word,data.weight))\n                    // trigger user js click handler\n                    if (this.model.click)\n                        this.model.click.execute(this.model, data);\n                },\n                hover: (!this.model.hover) ? null : (...args) => {\n                    if (this.model.hover) {\n                        if (!args || !args[0])\n                            return;\n                        const data = { word: args[0][0], weight: args[0][1], dimensions: args[1], event: args[2] };\n                        this.model.hover.execute(this.model, data);\n                    }\n                },\n            };\n            this.el.appendChild(canvas);\n            WordCloud(canvas, opts);\n        }\n    }\n    exports.WordCloud2View = WordCloud2View;\n    WordCloud2View.__name__ = \"WordCloud2View\";\n    class WordCloud2 extends widgets_1.Widget {\n        constructor(attrs) {\n            super(attrs);\n        }\n        static initClass() {\n            this.prototype.type = 'WordCloud2';\n            this.prototype.default_view = WordCloud2View;\n            this.define({\n                // every property here should be defined in the namespace above\n                // and in the pyfile with exactly the same name\n                source: [p.Instance],\n                view: [p.Instance, () => new cds_view_1.CDSView()],\n                wordCol: [p.String],\n                sizeCol: [p.String],\n                color: [p.Any, \"blue\"],\n                fontWeight: [p.Any, \"normal\"],\n                classes: [p.Any, null],\n                hover: [p.Instance, null],\n                click: [p.Instance, null],\n                rotateRatio: [p.Number, 1],\n                minRotation: [p.Number, 0],\n                maxRotation: [p.Number, Math.PI / 2],\n                rotationSteps: [p.Number, 32],\n                gridSize: [p.Number, 16],\n                fontFamily: [p.String, \"Times, Serif\"],\n                shape: [p.String, \"square\"],\n                weightFactor: [p.Any, null],\n            });\n            this.override({\n                width: 600,\n                height: 400,\n                background: \"#FFFFFF\",\n            });\n        }\n    }\n    exports.WordCloud2 = WordCloud2;\n    WordCloud2.__name__ = \"WordCloud2\";\n    WordCloud2.initClass();\n}\n","min_source":"function _(e,t,o){Object.defineProperty(o,\"__esModule\",{value:!0});const s=e(\"tslib\");var i=this&&this.__decorate||function(e,t,o,s){var i,r=arguments.length,n=r<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,o):s;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)n=Reflect.decorate(e,t,o,s);else for(var l=e.length-1;l>=0;l--)(i=e[l])&&(n=(r<3?i(n):r>3?i(t,o,n):i(t,o))||n);return r>3&&n&&Object.defineProperty(t,o,n),n};const r=e(\"@bokeh/bokehjs/models/widgets/widget\"),n=s.__importStar(e(\"@bokeh/bokehjs/core/properties\")),l=e(\"@bokeh/bokehjs/models/sources/cds_view\"),h=e(\"@bokeh/bokehjs/models/widgets\"),c=e(\"@bokeh/bokehjs/models/sources/column_data_source\"),d=e(\"@bokeh/bokehjs/core/util/object\"),a=e(\"@bokeh/bokehjs/core/util/array\"),m=e(\"@bokeh/bokehjs/core/bokeh_events\");o.DTINDEX_NAME=\"__bkdt_internal_index__\";let u=class extends m.BokehEvent{constructor(e,t){super(),this.word=e,this.weight=t}_to_json(){const{word:e,weight:t}=this;return{weight:t,word:e}}};var g;o.WordClickEvent=u,u.__name__=\"WordClickEvent\",o.WordClickEvent=u=i([(g=\"word_click_event\",function(e){e.prototype.event_name=g})],u);class f{constructor(e,t){if(this.source=e,this.view=t,o.DTINDEX_NAME in this.source.data)throw new Error(`special name ${o.DTINDEX_NAME} cannot be used as a data table column`);var s=[];for(const e of this.view.indices)s.push(e);this.index=s}getLength(){return this.index.length}getItem(e){const t={};for(const o of d.keys(this.source.data))t[o]=this.source.data[o][this.index[e]];return t[o.DTINDEX_NAME]=this.index[e],t}getRecords(){return a.range(0,this.getLength()).map(e=>this.getItem(e))}}function _(e){return(t=e)[Math.floor(Math.random()*t.length)];var t}f.__name__=\"DataProvider\";class w extends r.WidgetView{DEFAULT_WEIGHT_FACTOR(e){return Math.pow(e,2.3)*this.model.height/1024}initialize(){this.DEFAULT_WEIGHT_FACTOR=this.DEFAULT_WEIGHT_FACTOR.bind(this),super.initialize(),this.prepare()}prepare(){if(this.model.fontWeight&&\"function\"==typeof this.model.fontWeight.execute){const e=this.model.weightFactor;this.model.fontWeight=(t,o,s)=>{const i={word:t,weight:o,font_size:s};return e.execute(this.model,i)}}if(this.model.weightFactor&&\"function\"==typeof this.model.weightFactor.execute){const e=this.model.weightFactor;this.model.weightFactor=t=>{const o={size:t};return e?e.execute(this.model,o):this.DEFAULT_WEIGHT_FACTOR}}if(this.model.classes&&\"function\"==typeof this.model.classes.execute){const e=this.model.classes;this.model.classes=(t,o,s)=>{const i={word:t,weight:o,font_size:s};return e.execute(this.model,i)}}if(this.model.color&&\"function\"==typeof this.model.color.execute){const e=this.model.color;this.model.color=(t,o,s,i,r)=>{const n={word:t,weight:o,font_size:s,distance:i,theta:r};return e.execute(this.model,n)}}else if(\"object\"==typeof this.model.color&&\"function\"==typeof this.model.color.slice){const e=this.model.color;this.model.color=()=>_(e)}else if(\"string\"==typeof this.model.color){const e=this.model.source.get_column(this.model.color);if(e&&e.length>0){const e={},t=this.model.source.get_column(this.model.color),o=this.model.source.get_column(this.model.wordCol);if(o&&o.length&&t&&t.length)for(let s=0;s<o.length;s++)o[s]&&t[s]&&(e[o[s]]=t[s]);this.model.color=t=>e[t]}}}connect_signals(){super.connect_signals(),this.connect(this.model.source.change,()=>{this.prepare(),this.render()})}css_classes(){return super.css_classes().concat(\"bk-data-table\")}get_sizes1(){if(!this.model.sizeCol){let e=[];return this.data.getRecords().map(t=>{const o=t[this.model.wordCol].toUpperCase().match(/([A-Z]+)/);e.push(...o)}),function(e){const t=function(e){const t={};for(let o of e)t[o]=t[o]?t[o]+1:1;return t}(e);return Object.keys(t).map(e=>[e,t[e]]).sort((e,t)=>t[1]-e[1])}(e).slice(0,50)}const e=[];return this.data.getRecords().map(t=>{e.push([t[this.model.wordCol],t[this.model.sizeCol]])}),e}render(){super.render(),this.data=new f(this.model.source,this.model.view);let e=this.get_sizes1();const t=document.createElement(\"canvas\");t.width=this.model.width,t.height=this.model.height;const o=Math.round(16*this.model.width/1024),s={list:e,fontFamily:this.model.fontFamily?this.model.fontFamily:\"Times, serif\",gridSize:this.model.gridSize?this.model.gridSize:o,weightFactor:this.model.weightFactor?this.model.weightFactor:this.DEFAULT_WEIGHT_FACTOR,color:this.model.color,rotateRatio:this.model.rotateRatio,minRotation:this.model.minRotation,maxRotation:this.model.maxRotation,rotationSteps:this.model.rotationSteps,shuffle:!1,backgroundColor:this.model.background,drawOutOfBound:!1,classes:this.model.classes,fontWeight:this.model.fontWeight,shape:this.model.shape,click:(e,t,o)=>{let s=void 0;if(this.model.sizeCol){const t=this.data.getLength();for(let o=0;o<t;o++){const t=this.data.getItem(o);if(t[this.model.wordCol]===e[0]&&t[this.model.sizeCol]===e[1]){s=this.data.source,s.selected.indices=[o];break}}}void 0===s&&(s=new c.ColumnDataSource({data:{word:[e[0]],weight:[e[1]]}}),s.selected.indices=[0]);const i={word:e[0],weight:e[1],extra:e[2],dimensions:t,event:o,source:s};this.model.click&&this.model.click.execute(this.model,i)},hover:this.model.hover?(...e)=>{if(this.model.hover){if(!e||!e[0])return;const t={word:e[0][0],weight:e[0][1],dimensions:e[1],event:e[2]};this.model.hover.execute(this.model,t)}}:null};this.el.appendChild(t),WordCloud(t,s)}}o.WordCloud2View=w,w.__name__=\"WordCloud2View\";class p extends h.Widget{constructor(e){super(e)}static initClass(){this.prototype.type=\"WordCloud2\",this.prototype.default_view=w,this.define({source:[n.Instance],view:[n.Instance,()=>new l.CDSView],wordCol:[n.String],sizeCol:[n.String],color:[n.Any,\"blue\"],fontWeight:[n.Any,\"normal\"],classes:[n.Any,null],hover:[n.Instance,null],click:[n.Instance,null],rotateRatio:[n.Number,1],minRotation:[n.Number,0],maxRotation:[n.Number,Math.PI/2],rotationSteps:[n.Number,32],gridSize:[n.Number,16],fontFamily:[n.String,\"Times, Serif\"],shape:[n.String,\"square\"],weightFactor:[n.Any,null]}),this.override({width:600,height:400,background:\"#FFFFFF\"})}}o.WordCloud2=p,p.__name__=\"WordCloud2\",p.initClass()}\n//# sourceMappingURL=extension_bokeh_wordcloud2.min.js.map","min_map":"{\"version\":3,\"sources\":[\"0\"],\"names\":[\"_\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"tslib_1\",\"__decorate\",\"this\",\"decorators\",\"target\",\"key\",\"desc\",\"d\",\"c\",\"arguments\",\"length\",\"r\",\"getOwnPropertyDescriptor\",\"Reflect\",\"decorate\",\"i\",\"widget_1\",\"p\",\"__importStar\",\"cds_view_1\",\"widgets_1\",\"column_data_source_1\",\"object_1\",\"array_1\",\"bokeh_events_1\",\"DTINDEX_NAME\",\"WordClickEvent\",\"BokehEvent\",\"[object Object]\",\"word\",\"weight\",\"super\",\"event_name\",\"__name__\",\"cls\",\"prototype\",\"DataProvider\",\"source\",\"view\",\"data\",\"Error\",\"idx\",\"indices\",\"push\",\"index\",\"offset\",\"item\",\"field\",\"keys\",\"range\",\"getLength\",\"map\",\"getItem\",\"choose_str\",\"original_list\",\"choices\",\"Math\",\"floor\",\"random\",\"WordCloud2View\",\"WidgetView\",\"size\",\"pow\",\"model\",\"height\",\"DEFAULT_WEIGHT_FACTOR\",\"bind\",\"initialize\",\"prepare\",\"fontWeight\",\"cb_func\",\"weightFactor\",\"font_size\",\"execute\",\"classes\",\"color\",\"distance\",\"theta\",\"col\",\"get_column\",\"colors\",\"wordCol\",\"connect_signals\",\"connect\",\"change\",\"render\",\"css_classes\",\"concat\",\"sizeCol\",\"words\",\"getRecords\",\"record\",\"results\",\"toUpperCase\",\"match\",\"objects\",\"itm\",\"Counter\",\"k\",\"sort\",\"a\",\"b\",\"sortedCounter\",\"slice\",\"s\",\"sizes\",\"get_sizes1\",\"canvas\",\"document\",\"createElement\",\"width\",\"default_grid_size\",\"round\",\"opts\",\"list\",\"fontFamily\",\"gridSize\",\"rotateRatio\",\"minRotation\",\"maxRotation\",\"rotationSteps\",\"shuffle\",\"backgroundColor\",\"background\",\"drawOutOfBound\",\"shape\",\"click\",\"dimensions\",\"event\",\"undefined\",\"len_recs\",\"selected\",\"ColumnDataSource\",\"extra\",\"hover\",\"args\",\"el\",\"appendChild\",\"WordCloud\",\"WordCloud2\",\"Widget\",\"attrs\",\"type\",\"default_view\",\"define\",\"Instance\",\"CDSView\",\"String\",\"Any\",\"Number\",\"PI\",\"override\",\"initClass\"],\"mappings\":\"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\",\"file\":\"extension_bokeh_wordcloud2.min.js\"}"}}]}